[build-system] 
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "NMRoss"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
description = "Hydrogen NMR spectrum predictor"
dependencies = [
    # "rdkit",
]
authors = [
    {name = "Oscar Rosseneu", email = "oscar.rosseneu@epfl.ch"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]

[project.urls]
source = "https://github.com/OscarRCH/NMRoss"
tracker = "https://github.com/OscarRCH/NMRoss/issues"
# documentation = "https://NMRoss.readthedocs.io"

[project.optional-dependencies]
test = [
    "mypy",
    "hypothesis",
    "pytest",
    "pytest-cov",
    "tox",
    "genbadge[coverage]",
]
doc = [
    "furo",
    "myst-parser",
    "sphinx>=5",
    "sphinx-copybutton",
]

[tool.hatch.version]
path = "src/nmross/__about__.py"

[tool.mypy]
python_version = "3.10"
warn_redundant_casts = true
warn_unused_configs = true
pretty = true
show_error_codes = true
show_error_context = true
show_column_numbers = true

disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true

# More strict checks for library code
[[tool.mypy.overrides]]
module = "nmross"
disallow_untyped_defs = true
disable_error_code = ["import-untyped"]

# Ignore certain missing imports
# [[tool.mypy.overrides]]
# module = "thirdparty.*"
# ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.run]
omit = [
    '__about__.py'
]


[tool.coverage.report]
exclude_also = [
    "if __name__ == .__main__.:",
]
